{"version":3,"sources":["images/cameraicon.png","Modal.jsx","Image.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","props","console","log","userimg","classes","React","useState","open","setOpen","IconButton","type","style","marginLeft","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","color","user","src","alt","CameraIcon","width","height","textAlign","root","maxWidth","media","Image","img","tags","split","Card","CardActionArea","CardMedia","image","webformatURL","title","CardContent","map","tag","index","Chip","label","CardActions","Tooltip","views","placement","likes","comments","downloads","userImageURL","App","images","setImages","query","setQuery","value","setValue","isLoading","setLoading","useEffect","fetch","process","then","data","json","res","hits","catch","e","srcset","noValidate","autoComplete","TextField","onChange","target","Button","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9db96e3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cameraicon.d99eba23.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport AccountCircleTwoToneIcon from \"@material-ui/icons/AccountCircleTwoTone\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CameraIcon from \"./images/cameraicon.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n  console.log(props.userimg);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        type=\"button\"\r\n        style={{ marginLeft: \"40%\" }}\r\n        onClick={handleOpen}\r\n      >\r\n        <AccountCircleTwoToneIcon />\r\n      </IconButton>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\" style={{ color: \"teal\" }}>\r\n              Author: {props.user}\r\n            </h2>\r\n            {props.userimg !== \"\" ? (\r\n              <img src={props.userimg} alt={\"user Image\"} />\r\n            ) : (\r\n              <img\r\n                src={CameraIcon}\r\n                alt={\"user Image\"}\r\n                style={{ width: \"150px\", height: \"150px\", textAlign: \"center\" }}\r\n              />\r\n            )}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport \"./App.css\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\nimport ChatBubbleTwoToneIcon from \"@material-ui/icons/ChatBubbleTwoTone\";\r\nimport GetAppTwoToneIcon from \"@material-ui/icons/GetAppTwoTone\";\r\nimport TransitionsModal from \"./Modal\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst Image = ({ img }) => {\r\n  const classes = useStyles();\r\n  //   SPlit tags to use separtely\r\n  const tags = img.tags.split(\",\");\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={img.webformatURL}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          {tags.map((tag, index) => (\r\n            <Chip label={\"#\" + tag} />\r\n          ))}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Tooltip title={img.views} placement=\"bottom-end\">\r\n          <VisibilityTwoToneIcon style={{ color: \"blue\" }} />\r\n        </Tooltip>\r\n        <Tooltip title={img.likes} placement=\"bottom-end\">\r\n          <FavoriteIcon style={{ color: \"#e11d74\" }} />\r\n        </Tooltip>\r\n        <Tooltip title={img.comments} placement=\"bottom-end\">\r\n          <ChatBubbleTwoToneIcon style={{ color: \"#91d18b\" }} />\r\n        </Tooltip>\r\n        <Tooltip title={img.downloads} placement=\"bottom-end\">\r\n          <GetAppTwoToneIcon style={{ color: \"#7579e7\" }} />\r\n        </Tooltip>\r\n\r\n        <TransitionsModal user={img.user} userimg={img.userImageURL} />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default Image;\r\n","// https://pixabay.com/api/?key=19067741-5a755840c2646f9776374d392&q=yellow+flowers&image_type=photo\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"./Image\"; // Use Image as Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"./images/cameraicon.png\";\nconst App = () => {\n  const api = process.env.REACT_APP_PIXAGALLERY_API; //APi from env\n  const [images, setImages] = useState([]); // images Hooks\n  const [query, setQuery] = useState(\"dog\"); //for changing queries\n  const [value, setValue] = useState(\"\"); //search bar input values\n  const [isLoading, setLoading] = useState(true); //For checking loading or not\n\n  // Call PIXABAY API\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${api}&q=${query}&image_type=photo`)\n      .then((data) => data.json())\n      .then((res) => {\n        setImages(res.hits);\n        setLoading(false);\n      })\n      .catch((e) => console.log(e));\n  }, [query]);\n\n  // Fun. run on search click\n  const seacrh = () => {\n    setQuery(value);\n  };\n\n  return (\n    <>\n      {/* Title section */}\n      <div className=\"title-section \">\n        <h1>\n          Soul gallery\n          <img\n            style={{ width: \"10%\", marginLeft: \"1%\" }}\n            src={CameraIcon}\n            alt=\"\"\n            srcset=\"\"\n          />\n        </h1>\n      </div>\n      {/* Seacrh Section */}\n      <div className=\"search-bar\">\n        <form noValidate autoComplete=\"off\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"Type Keyword/Query\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={seacrh}>\n            Search\n          </Button>\n        </form>\n      </div>\n      {/* Use map to get values from array images */}\n      <div className=\"img-section\">\n        {isLoading ? (\n          <h1>Loding...</h1>\n        ) : (\n          images.map((image) => <Image img={image} className=\"img-specific\" />)\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}